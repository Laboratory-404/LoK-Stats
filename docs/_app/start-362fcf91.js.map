{"version":3,"file":"start-362fcf91.js","sources":["../../../runtime/paths.js","../../../generated/root.svelte","../../../../vite/preload-helper","../../../generated/client-matchers.js","../../../generated/client-manifest.js","../../../runtime/client/start.js"],"sourcesContent":["/** @type {string} */\nlet base = '';\n\n/** @type {string} */\nlet assets = '';\n\n/** @param {{ base: string, assets: string }} paths */\nfunction set_paths(paths) {\n\tbase = paths.base;\n\tassets = paths.assets || base;\n}\n\nexport { assets, base, set_paths };\n","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} {...(props_0 || {})}>\n\t\t{#if components[2]}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}/>\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} {...(props_0 || {})} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","const scriptRel = 'modulepreload';const seen = {};const base = '/_app/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\nexport const components = [\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\__layout.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\__error.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\land-[id].svelte\")\n];\n\nexport const dictionary = {\n\t\"\": [[0, 2], [1]],\n\t\"land-[id]\": [[0, 3], [1]]\n};","import { onMount, tick } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { assets, set_paths } from '../paths.js';\nimport Root from '__GENERATED__/root.svelte';\nimport { components, dictionary, matchers } from '__GENERATED__/client-manifest.js';\nimport { init } from './singletons.js';\n\n/**\n * @param {unknown} err\n * @return {Error}\n */\nfunction coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * @param {import('types').LoadOutput} loaded\n * @returns {import('types').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\tconst has_error_status =\n\t\tloaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;\n\tif (loaded.error || has_error_status) {\n\t\tconst status = loaded.status;\n\n\t\tif (!loaded.error && has_error_status) {\n\t\t\treturn {\n\t\t\t\tstatus: status || 500,\n\t\t\t\terror: new Error()\n\t\t\t};\n\t\t}\n\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code — defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error('\"redirect\" property returned from load() must be a string')\n\t\t\t};\n\t\t}\n\t}\n\n\t// TODO remove before 1.0\n\tif (/** @type {any} */ (loaded).context) {\n\t\tthrow new Error(\n\t\t\t'You are returning \"context\" from a load function. ' +\n\t\t\t\t'\"context\" was renamed to \"stuff\", please adjust your code accordingly.'\n\t\t);\n\t}\n\n\treturn /** @type {import('types').NormalizedLoadOutput} */ (loaded);\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nfunction normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && /\\/[^./]+$/.test(path)) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\n/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/** @param {Event} event */\nfunction find_anchor(event) {\n\tconst node = event\n\t\t.composedPath()\n\t\t.find((e) => e instanceof Node && e.nodeName.toUpperCase() === 'A'); // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement | undefined} */ (node);\n}\n\n/** @param {HTMLAnchorElement | SVGAElement} node */\nfunction get_href(node) {\n\treturn node instanceof SVGAElement\n\t\t? new URL(node.href.baseVal, document.baseURI)\n\t\t: new URL(node.href);\n}\n\n/** @param {any} value */\nfunction notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\nfunction create_updated_store() {\n\tconst { set, subscribe } = writable(false);\n\n\tconst interval = +(\n\t\t/** @type {string} */ (import.meta.env.VITE_SVELTEKIT_APP_VERSION_POLL_INTERVAL)\n\t);\n\tconst initial = import.meta.env.VITE_SVELTEKIT_APP_VERSION;\n\n\t/** @type {NodeJS.Timeout} */\n\tlet timeout;\n\n\tasync function check() {\n\t\tif (import.meta.env.DEV || import.meta.env.SSR) return false;\n\n\t\tclearTimeout(timeout);\n\n\t\tif (interval) timeout = setTimeout(check, interval);\n\n\t\tconst file = import.meta.env.VITE_SVELTEKIT_APP_VERSION_FILE;\n\n\t\tconst res = await fetch(`${assets}/${file}`, {\n\t\t\theaders: {\n\t\t\t\tpragma: 'no-cache',\n\t\t\t\t'cache-control': 'no-cache'\n\t\t\t}\n\t\t});\n\n\t\tif (res.ok) {\n\t\t\tconst { version } = await res.json();\n\t\t\tconst updated = version !== initial;\n\n\t\t\tif (updated) {\n\t\t\t\tset(true);\n\t\t\t\tclearTimeout(timeout);\n\t\t\t}\n\n\t\t\treturn updated;\n\t\t} else {\n\t\t\tthrow new Error(`Version check failed: ${res.status}`);\n\t\t}\n\t}\n\n\tif (interval) timeout = setTimeout(check, interval);\n\n\treturn {\n\t\tsubscribe,\n\t\tcheck\n\t};\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = JSON.stringify(typeof resource === 'string' ? resource : resource.url);\n\n\tlet selector = `script[sveltekit\\\\:data-type=\"data\"][sveltekit\\\\:data-url=${url}]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[sveltekit\\\\:data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script && script.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn fetch(resource, opts);\n}\n\nconst param_pattern = /^(\\.\\.\\.)?(\\w+)(?:=(\\w+))?$/;\n\n/** @param {string} id */\nfunction parse_route_id(id) {\n\t/** @type {string[]} */\n\tconst names = [];\n\n\t/** @type {string[]} */\n\tconst types = [];\n\n\t// `/foo` should get an optional trailing slash, `/foo.json` should not\n\t// const add_trailing_slash = !/\\.[a-z]+$/.test(key);\n\tlet add_trailing_slash = true;\n\n\tconst pattern =\n\t\tid === ''\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${decodeURIComponent(id)\n\t\t\t\t\t\t.split('/')\n\t\t\t\t\t\t.map((segment, i, segments) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tnames.push(match[1]);\n\t\t\t\t\t\t\t\ttypes.push(match[2]);\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst is_last = i === segments.length - 1;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t'/' +\n\t\t\t\t\t\t\t\tsegment\n\t\t\t\t\t\t\t\t\t.split(/\\[(.+?)\\]/)\n\t\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\t\tconst [, rest, name, type] = /** @type {RegExpMatchArray} */ (\n\t\t\t\t\t\t\t\t\t\t\t\tparam_pattern.exec(content)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tnames.push(name);\n\t\t\t\t\t\t\t\t\t\t\ttypes.push(type);\n\t\t\t\t\t\t\t\t\t\t\treturn rest ? '(.*?)' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (is_last && content.includes('.')) add_trailing_slash = false;\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\tcontent // allow users to specify characters on the file system in an encoded manner\n\t\t\t\t\t\t\t\t\t\t\t\t.normalize()\n\t\t\t\t\t\t\t\t\t\t\t\t// We use [ and ] to denote parameters, so users must encode these on the file\n\t\t\t\t\t\t\t\t\t\t\t\t// system to match against them. We don't decode all characters since others\n\t\t\t\t\t\t\t\t\t\t\t\t// can already be epressed and so that '%' can be easily used directly in filenames\n\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Bb]/g, '[')\n\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Dd]/g, ']')\n\t\t\t\t\t\t\t\t\t\t\t\t// '#', '/', and '?' can only appear in URL path segments in an encoded manner.\n\t\t\t\t\t\t\t\t\t\t\t\t// They will not be touched by decodeURI so need to be encoded here, so\n\t\t\t\t\t\t\t\t\t\t\t\t// that we can match against them.\n\t\t\t\t\t\t\t\t\t\t\t\t// We skip '/' since you can't create a file with it on any OS\n\t\t\t\t\t\t\t\t\t\t\t\t.replace(/#/g, '%23')\n\t\t\t\t\t\t\t\t\t\t\t\t.replace(/\\?/g, '%3F')\n\t\t\t\t\t\t\t\t\t\t\t\t// escape characters that have special meaning in regex\n\t\t\t\t\t\t\t\t\t\t\t\t.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\t\t\t\t\t\t\t\t\t\t); // TODO handle encoding\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.join('')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}${add_trailing_slash ? '/?' : ''}$`\n\t\t\t  );\n\n\treturn { pattern, names, types };\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {string[]} names\n * @param {string[]} types\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nfunction exec(match, names, types, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst params = {};\n\n\tfor (let i = 0; i < names.length; i += 1) {\n\t\tconst name = names[i];\n\t\tconst type = types[i];\n\t\tconst value = match[i + 1] || '';\n\n\t\tif (type) {\n\t\t\tconst matcher = matchers[type];\n\t\t\tif (!matcher) throw new Error(`Missing \"${type}\" param matcher`); // TODO do this ahead of time?\n\n\t\t\tif (!matcher(value)) return;\n\t\t}\n\n\t\tparams[name] = value;\n\t}\n\n\treturn params;\n}\n\n/**\n * @param {import('types').CSRComponentLoader[]} components\n * @param {Record<string, [number[], number[], 1?]>} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nfunction parse(components, dictionary, matchers) {\n\tconst routes = Object.entries(dictionary).map(([id, [a, b, has_shadow]]) => {\n\t\tconst { pattern, names, types } = parse_route_id(id);\n\n\t\treturn {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, names, types, matchers);\n\t\t\t},\n\t\t\ta: a.map((n) => components[n]),\n\t\t\tb: b.map((n) => components[n]),\n\t\t\thas_shadow: !!has_shadow\n\t\t};\n\t});\n\n\treturn routes;\n}\n\nconst SCROLL_KEY = 'sveltekit:scroll';\nconst INDEX_KEY = 'sveltekit:index';\n\nconst routes = parse(components, dictionary, matchers);\n\n// we import the root layout/error components eagerly, so that\n// connectivity errors after initialisation don't nuke the app\nconst default_layout = components[0]();\nconst default_error = components[1]();\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n/**\n * @param {{\n *   target: Element;\n *   session: App.Session;\n *   base: string;\n *   trailing_slash: import('types').TrailingSlash;\n * }} opts\n * @returns {import('./types').Client}\n */\nfunction create_client({ target, session, base, trailing_slash }) {\n\t/** @type {Map<string, import('./types').NavigationResult>} */\n\tconst cache = new Map();\n\n\t/** @type {Set<string>} */\n\tconst invalidated = new Set();\n\n\tconst stores = {\n\t\turl: notifiable_store({}),\n\t\tpage: notifiable_store({}),\n\t\tnavigating: writable(/** @type {import('types').Navigation | null} */ (null)),\n\t\tsession: writable(session),\n\t\tupdated: create_updated_store()\n\t};\n\n\t/** @type {{id: string | null, promise: Promise<import('./types').NavigationResult | undefined> | null}} */\n\tconst load_cache = {\n\t\tid: null,\n\t\tpromise: null\n\t};\n\n\tconst callbacks = {\n\t\t/** @type {Array<(opts: { from: URL, to: URL | null, cancel: () => void }) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(opts: { from: URL | null, to: URL }) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null,\n\t\tsession_id: 0,\n\t\tbranch: []\n\t};\n\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet session_id = 1;\n\n\t/** @type {Promise<void> | null} */\n\tlet invalidating = null;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\t/** @type {App.Session} */\n\tlet $session;\n\n\tlet ready = false;\n\tstores.session.subscribe(async (value) => {\n\t\t$session = value;\n\n\t\tif (!ready) return;\n\t\tsession_id += 1;\n\n\t\tupdate(new URL(location.href), [], true);\n\t});\n\tready = true;\n\n\t/** Keeps tracks of multiple navigations caused by redirects during rendering */\n\tlet navigating = 0;\n\n\tlet router_enabled = true;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY] ?? 0;\n\n\tif (current_history_index === 0) {\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState({ ...history.state, [INDEX_KEY]: 0 }, '', location.href);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) scrollTo(scroll.x, scroll.y);\n\n\tlet hash_navigating = false;\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/** @type {{}} */\n\tlet navigating_token;\n\n\t/**\n\t * @param {string} href\n\t * @param {{ noscroll?: boolean; replaceState?: boolean; keepfocus?: boolean; state?: any }} opts\n\t * @param {string[]} redirect_chain\n\t */\n\tasync function goto(\n\t\thref,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} },\n\t\tredirect_chain\n\t) {\n\t\tconst url = new URL(href, get_base_uri(document));\n\n\t\tif (router_enabled) {\n\t\t\treturn navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\tkeepfocus,\n\t\t\t\tredirect_chain,\n\t\t\t\tdetails: {\n\t\t\t\t\tstate,\n\t\t\t\t\treplaceState\n\t\t\t\t},\n\t\t\t\taccepted: () => {},\n\t\t\t\tblocked: () => {}\n\t\t\t});\n\t\t}\n\n\t\tawait native_navigation(url);\n\t}\n\n\t/** @param {URL} url */\n\tasync function prefetch(url) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\tload_cache.promise = load_route(intent, false);\n\t\tload_cache.id = intent.id;\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t */\n\tasync function update(url, redirect_chain, no_cache, opts) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tconst current_token = (token = {});\n\t\tlet navigation_result = intent && (await load_route(intent, no_cache));\n\n\t\tif (\n\t\t\t!navigation_result &&\n\t\t\turl.origin === location.origin &&\n\t\t\turl.pathname === location.pathname\n\t\t) {\n\t\t\t// this could happen in SPA fallback mode if the user navigated to\n\t\t\t// `/non-existent-page`. if we fall back to reloading the page, it\n\t\t\t// will create an infinite loop. so whereas we normally handle\n\t\t\t// unknown routes by going to the server, in this special case\n\t\t\t// we render a client-side error page instead\n\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\tstatus: 404,\n\t\t\t\terror: new Error(`Not found: ${url.pathname}`),\n\t\t\t\turl,\n\t\t\t\trouteId: null\n\t\t\t});\n\t\t}\n\n\t\tif (!navigation_result) {\n\t\t\tawait native_navigation(url);\n\t\t\treturn; // unnecessary, but TypeScript prefers it this way\n\t\t}\n\n\t\t// abort if user navigated during update\n\t\tif (token !== current_token) return;\n\n\t\tinvalidated.clear();\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: null\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (router_enabled) {\n\t\t\t\t\tgoto(new URL(navigation_result.redirect, url).href, {}, [\n\t\t\t\t\t\t...redirect_chain,\n\t\t\t\t\t\turl.pathname\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tawait native_navigation(new URL(navigation_result.redirect, location.href));\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (navigation_result.props?.page?.status >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\troot.$set(navigation_result.props);\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\t// Reset page selection and focus\n\t\t\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\t\t\tconst root = document.body;\n\t\t\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\troot.tabIndex = -1;\n\t\t\t\troot.focus();\n\n\t\t\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\t\t\tif (tabindex !== null) {\n\t\t\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t\t\t} else {\n\t\t\t\t\troot.removeAttribute('tabindex');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tload_cache.promise = null;\n\t\tload_cache.id = null;\n\t\tautoscroll = true;\n\t\tupdating = false;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\trouter_enabled = leaf_node?.module.router !== false;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\tfunction initialize(result) {\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-svelte]');\n\t\tif (style) style.remove();\n\n\t\tpage = result.props.page;\n\n\t\troot = new Root({\n\t\t\ttarget,\n\t\t\tprops: { ...result.props, stores },\n\t\t\thydrate: true\n\t\t});\n\n\t\tstarted = true;\n\n\t\tif (router_enabled) {\n\t\t\tconst navigation = { from: null, to: new URL(location.href) };\n\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error?: Error;\n\t *   routeId: string | null;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tstuff,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\trouteId\n\t}) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\t\tconst redirect = filtered.find((f) => f.loaded?.redirect);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tredirect: redirect?.loaded?.redirect,\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\tsession_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tconst loaded = filtered[i].loaded;\n\t\t\tresult.props[`props_${i}`] = loaded ? await loaded.props : null;\n\t\t}\n\n\t\tif (!current.url || url.href !== current.url.href) {\n\t\t\tresult.props.page = { error, params, routeId, status, stuff, url };\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst maxage = leaf.loaded && leaf.loaded.maxage;\n\n\t\tif (maxage) {\n\t\t\tconst key = url.pathname + url.search; // omit hash\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (cache.get(key) === result) {\n\t\t\t\t\tcache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, maxage * 1000);\n\n\t\t\tconst unsubscribe = stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tcache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: import('types').CSRComponent;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   props?: Record<string, any>;\n\t *   routeId: string | null;\n\t * }} options\n\t */\n\tasync function load_node({ status, error, module, url, params, stuff, props, routeId }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\turl: false,\n\t\t\t\tsession: false,\n\t\t\t\tstuff: false,\n\t\t\t\tdependencies: new Set()\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tstuff\n\t\t};\n\n\t\tif (props) {\n\t\t\t// shadow endpoint props means we need to mark this URL as a dependency of itself\n\t\t\tnode.uses.dependencies.add(url.href);\n\t\t}\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst uses_params = {};\n\t\tfor (const key in params) {\n\t\t\tObject.defineProperty(uses_params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = $session;\n\n\t\tif (module.load) {\n\t\t\t/** @type {import('types').LoadInput | import('types').ErrorLoadInput} */\n\t\t\tconst load_input = {\n\t\t\t\trouteId,\n\t\t\t\tparams: uses_params,\n\t\t\t\tprops: props || {},\n\t\t\t\tget url() {\n\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\treturn url;\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget stuff() {\n\t\t\t\t\tnode.uses.stuff = true;\n\t\t\t\t\treturn { ...stuff };\n\t\t\t\t},\n\t\t\t\tfetch(resource, info) {\n\t\t\t\t\tconst requested = typeof resource === 'string' ? resource : resource.url;\n\t\t\t\t\tconst { href } = new URL(requested, url);\n\t\t\t\t\tnode.uses.dependencies.add(href);\n\n\t\t\t\t\treturn started ? fetch(resource, info) : initial_fetch(resource, info);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\t// TODO remove this for 1.0\n\t\t\t\tObject.defineProperty(load_input, 'page', {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error('`page` in `load` functions has been replaced by `url` and `params`');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\t/** @type {import('types').ErrorLoadInput} */ (load_input).status = status;\n\t\t\t\t/** @type {import('types').ErrorLoadInput} */ (load_input).error = error;\n\t\t\t}\n\n\t\t\tconst loaded = await module.load.call(null, load_input);\n\n\t\t\tif (!loaded) {\n\t\t\t\tthrow new Error('load function must return a value');\n\t\t\t}\n\n\t\t\tnode.loaded = normalize(loaded);\n\t\t\tif (node.loaded.stuff) node.stuff = node.loaded.stuff;\n\t\t} else if (props) {\n\t\t\tnode.loaded = normalize({ props });\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @param {boolean} no_cache\n\t */\n\tasync function load_route({ id, url, params, route }, no_cache) {\n\t\tif (load_cache.id === id && load_cache.promise) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tif (!no_cache) {\n\t\t\tconst cached = cache.get(id);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst { a, b, has_shadow } = route;\n\n\t\tconst changed = current.url && {\n\t\t\turl: id !== current.url.pathname + current.url.search,\n\t\t\tparams: Object.keys(params).filter((key) => current.params[key] !== params[key]),\n\t\t\tsession: session_id !== current.session_id\n\t\t};\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tlet branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = {};\n\t\tlet stuff_changed = false;\n\n\t\t/** @type {number | undefined} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error | undefined} */\n\t\tlet error;\n\n\t\t// preload modules\n\t\ta.forEach((loader) => loader());\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.url && previous.uses.url) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tArray.from(previous.uses.dependencies).some((dep) => invalidated.has(dep)) ||\n\t\t\t\t\t(stuff_changed && previous.uses.stuff);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\tlet props = {};\n\n\t\t\t\t\tconst is_shadow_page = has_shadow && i === a.length - 1;\n\n\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\tconst res = await fetch(\n\t\t\t\t\t\t\t`${url.pathname}${url.pathname.endsWith('/') ? '' : '/'}__data.json${url.search}`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'x-sveltekit-load': 'true'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\tconst redirect = res.headers.get('x-sveltekit-location');\n\n\t\t\t\t\t\t\tif (redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprops = res.status === 204 ? {} : await res.json();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus = res.status;\n\t\t\t\t\t\t\terror = new Error('Failed to load data');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tnode = await load_node({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tprops,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded) {\n\t\t\t\t\t\t\t// TODO remove for 1.0\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\tif (node.loaded.fallthrough) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t'fallthrough is no longer supported. Use matchers instead: https://kit.svelte.dev/docs/routing#advanced-routing-matching'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\t\tstatus = node.loaded.status;\n\t\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect: node.loaded.redirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.stuff) {\n\t\t\t\t\t\t\t\tstuff_changed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = coalesce_to_error(e);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tstuff: node_loaded.stuff,\n\t\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.stuff) {\n\t\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t\t...error_loaded.loaded.stuff\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch = branch.slice(0, j + 1).concat(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await load_root_error_page({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: route.id\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node?.loaded?.stuff) {\n\t\t\t\t\tstuff = {\n\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId: route.id\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   url: URL;\n\t *   routeId: string | null\n\t * }} opts\n\t */\n\tasync function load_root_error_page({ status, error, url, routeId }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst root_layout = await load_node({\n\t\t\tmodule: await default_layout,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {},\n\t\t\trouteId\n\t\t});\n\n\t\tconst root_error = await load_node({\n\t\t\tstatus,\n\t\t\terror,\n\t\t\tmodule: await default_error,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: (root_layout && root_layout.loaded && root_layout.loaded.stuff) || {},\n\t\t\trouteId\n\t\t});\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {\n\t\t\t\t...root_layout?.loaded?.stuff,\n\t\t\t\t...root_error?.loaded?.stuff\n\t\t\t},\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tfunction get_navigation_intent(url) {\n\t\tif (url.origin !== location.origin || !url.pathname.startsWith(base)) return;\n\n\t\tconst path = decodeURI(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = {\n\t\t\t\t\tid: url.pathname + url.search,\n\t\t\t\t\troute,\n\t\t\t\t\tparams,\n\t\t\t\t\turl\n\t\t\t\t};\n\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({ url, scroll, keepfocus, redirect_chain, details, accepted, blocked }) {\n\t\tconst from = current.url;\n\t\tlet should_block = false;\n\n\t\tconst navigation = {\n\t\t\tfrom,\n\t\t\tto: url,\n\t\t\tcancel: () => (should_block = true)\n\t\t};\n\n\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tconst pathname = normalize_path(url.pathname, trailing_slash);\n\t\tconst normalized = new URL(url.origin + pathname + url.search + url.hash);\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tnavigating++;\n\n\t\tconst current_navigating_token = (navigating_token = {});\n\n\t\tif (started) {\n\t\t\tstores.navigating.set({\n\t\t\t\tfrom: current.url,\n\t\t\t\tto: normalized\n\t\t\t});\n\t\t}\n\n\t\tawait update(normalized, redirect_chain, false, {\n\t\t\tscroll,\n\t\t\tkeepfocus,\n\t\t\tdetails\n\t\t});\n\n\t\tnavigating--;\n\n\t\t// navigation was aborted\n\t\tif (navigating_token !== current_navigating_token) return;\n\n\t\tif (!navigating) {\n\t\t\tconst navigation = { from, to: normalized };\n\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\t\tstores.navigating.set(null);\n\t\t}\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (import.meta.env.DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => goto(href, opts, []),\n\n\t\tinvalidate: (resource) => {\n\t\t\tconst { href } = new URL(resource, location.href);\n\n\t\t\tinvalidated.add(href);\n\n\t\t\tif (!invalidating) {\n\t\t\t\tinvalidating = Promise.resolve().then(async () => {\n\t\t\t\t\tawait update(new URL(location.href), [], true);\n\n\t\t\t\t\tinvalidating = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn invalidating;\n\t\t},\n\n\t\tprefetch: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait prefetch(url);\n\t\t},\n\n\t\t// TODO rethink this API\n\t\tprefetch_routes: async (pathnames) => {\n\t\t\tconst matching = pathnames\n\t\t\t\t? routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)))\n\t\t\t\t: routes;\n\n\t\t\tconst promises = matching.map((r) => Promise.all(r.a.map((load) => load())));\n\n\t\t\tawait Promise.all(promises);\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\tconst navigation = {\n\t\t\t\t\tfrom: current.url,\n\t\t\t\t\tto: null,\n\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t};\n\n\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/** @param {Event} event */\n\t\t\tconst trigger_prefetch = (event) => {\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\t\tprefetch(get_href(a));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/** @type {NodeJS.Timeout} */\n\t\t\tlet mousemove_timeout;\n\n\t\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\t\tconst handle_mousemove = (event) => {\n\t\t\t\tclearTimeout(mousemove_timeout);\n\t\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t\t// add a layer of indirection to address that\n\t\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t\t);\n\t\t\t\t}, 20);\n\t\t\t};\n\n\t\t\taddEventListener('touchstart', trigger_prefetch);\n\t\t\taddEventListener('mousemove', handle_mousemove);\n\t\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\taddEventListener('click', (event) => {\n\t\t\t\tif (!router_enabled) return;\n\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (!a) return;\n\n\t\t\t\tif (!a.href) return;\n\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\t\t\t\tconst url = get_href(a);\n\n\t\t\t\t// Ignore if url does not have origin (e.g. `mailto:`, `tel:`.)\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See: https://github.com/sveltejs/kit/issues/4045\n\t\t\t\tif (!is_svg_a_element && url.origin === 'null') return;\n\n\t\t\t\t// Ignore if tag has\n\t\t\t\t// 1. 'download' attribute\n\t\t\t\t// 2. 'rel' attribute includes external\n\t\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\t\tif (a.hasAttribute('download') || rel.includes('external')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore if <a> has a target\n\t\t\t\tif (is_svg_a_element ? a.target.baseVal : a.target) return;\n\n\t\t\t\tif (url.href === location.href) {\n\t\t\t\t\tif (!location.hash) event.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [base, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && base === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: a.hasAttribute('sveltekit:noscroll') ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: false\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault()\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state && router_enabled) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\tconst delta = current_history_index - event.state[INDEX_KEY];\n\t\t\t\t\t\t\thistory.go(delta);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({ status, error, nodes, params, routeId }) => {\n\t\t\tconst url = new URL(location.href);\n\n\t\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\t\tconst branch = [];\n\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tlet stuff = {};\n\n\t\t\t/** @type {import('./types').NavigationResult | undefined} */\n\t\t\tlet result;\n\n\t\t\tlet error_args;\n\n\t\t\ttry {\n\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\t\tlet props;\n\n\t\t\t\t\tif (is_leaf) {\n\t\t\t\t\t\tconst serialized = document.querySelector('script[sveltekit\\\\:data-type=\"props\"]');\n\t\t\t\t\t\tif (serialized) {\n\t\t\t\t\t\t\tprops = JSON.parse(/** @type {string} */ (serialized.textContent));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst node = await load_node({\n\t\t\t\t\t\tmodule: await nodes[i],\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff,\n\t\t\t\t\t\tstatus: is_leaf ? status : undefined,\n\t\t\t\t\t\terror: is_leaf ? error : undefined,\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\trouteId\n\t\t\t\t\t});\n\n\t\t\t\t\tif (props) {\n\t\t\t\t\t\tnode.uses.dependencies.add(url.href);\n\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tbranch.push(node);\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\t\terror_args = {\n\t\t\t\t\t\t\t\tstatus: node.loaded.status,\n\t\t\t\t\t\t\t\terror: node.loaded.error,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\trouteId\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (node.loaded.stuff) {\n\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult = error_args\n\t\t\t\t\t? await load_root_error_page(error_args)\n\t\t\t\t\t: await get_navigation_result_from_branch({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\tbranch,\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\trouteId\n\t\t\t\t\t  });\n\t\t\t} catch (e) {\n\t\t\t\tif (error) throw e;\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: coalesce_to_error(e),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (result.redirect) {\n\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t// a redirect but only in the browser\n\t\t\t\tawait native_navigation(new URL(result.redirect, location.href));\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n\n/**\n * @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Element;\n *   session: any;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: Array<Promise<import('types').CSRComponent>>;\n *     params: Record<string, string>;\n *     routeId: string | null;\n *   };\n * }} opts\n */\nasync function start({ paths, target, session, route, spa, trailing_slash, hydrate }) {\n\tconst client = create_client({\n\t\ttarget,\n\t\tsession,\n\t\tbase: paths.base,\n\t\ttrailing_slash\n\t});\n\n\tinit({ client });\n\tset_paths(paths);\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t}\n\n\tif (route) {\n\t\tif (spa) client.goto(location.href, { replaceState: true });\n\t\tclient._start_router();\n\t}\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nexport { start };\n"],"names":["base","init"],"mappings":"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"}